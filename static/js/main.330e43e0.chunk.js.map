{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["BASE_URL","makeRequest","a","route","fetch","res","json","fetchUserData","id","TodoList","state","searchInput","currentOption","leftVisible","todo","title","completed","toLowerCase","includes","handleChange","key","value","setState","this","props","todos","setUser","shownTodos","filter","className","type","onChange","e","target","currentTarget","map","checked","readOnly","onClick","userId","React","Component","CurrentUser","user","clear","name","email","phone","App","currentUser","clearUser","setCurrentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.330e43e0.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nconst makeRequest = async <T>(route = '/'): Promise<T> => {\n  const res: Response = await fetch(BASE_URL + route);\n\n  return res.json();\n};\n\nexport const fetchTodos = (): Promise<Todo[]> => makeRequest('/todos');\nexport const fetchUserData = (id: number): Promise<User> => makeRequest(`/users/${id}`);\n","import React from 'react';\nimport './TodoList.scss';\n\ninterface State {\n  searchInput: string;\n  currentOption: string;\n}\n\ninterface Props {\n  todos: Todo[];\n  setUser: (id: number) => Promise<void>;\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    searchInput: '',\n    currentOption: 'all',\n  };\n\n  leftVisible = (todo: Todo): boolean => {\n    const { searchInput, currentOption } = this.state;\n    const { title, completed } = todo;\n    const searched: boolean = title.toLowerCase().includes(searchInput.toLowerCase());\n\n    if (!searched) {\n      return false;\n    }\n\n    if (currentOption === 'all') {\n      return true;\n    }\n\n    const isComplited = completed && currentOption === 'completed';\n    const isActive = !completed && currentOption === 'active';\n\n    return isComplited || isActive;\n  };\n\n  handleChange = (key: string, value: string) => {\n    this.setState({\n      [key]: value,\n    } as Pick<State, keyof State>);\n  };\n\n  render() {\n    const { searchInput } = this.state;\n    const { todos, setUser } = this.props;\n\n    const shownTodos = todos.filter(this.leftVisible);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          value={searchInput}\n          onChange={(e) => this.handleChange('searchInput', e.target.value)}\n        />\n\n        <select onChange={(e) => this.handleChange('currentOption', e.currentTarget.value)}>\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {shownTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={\n                  `\n                   TodoList__item \n                   TodoList__item--${todo.completed ? '' : 'un'}checked\n                  `\n                }\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\"\n                  type=\"button\"\n                  onClick={() => setUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\ninterface Props {\n  user: User;\n  clear: () => void;\n}\n\nexport const CurrentUser: React.FC<Props> = ({ user, clear }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:\n        {user?.id}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">\n      {user?.name}\n    </h3>\n    <p className=\"CurrentUser__email\">\n      {user?.email}\n    </p>\n    <p className=\"CurrentUser__phone\">\n      {user?.phone}\n    </p>\n    <input\n      type=\"button\"\n      value=\"hide user data\"\n      onClick={clear}\n    />\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { fetchTodos, fetchUserData } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  currentUser: User | null;\n  todos: Todo[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    currentUser: null,\n    todos: [],\n  };\n\n  async componentDidMount() {\n    this.setState({\n      todos: await fetchTodos(),\n    });\n  }\n\n  clearUser = () => {\n    this.setState({ currentUser: null });\n  };\n\n  setCurrentUser = async (id: number): Promise<void> => {\n    if (this.state.currentUser?.id !== id) {\n      this.setState({\n        currentUser: await fetchUserData(id),\n      });\n    }\n  };\n\n  render() {\n    const { currentUser, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList {...{ todos, setUser: this.setCurrentUser }} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {currentUser ? (\n              <CurrentUser user={currentUser} clear={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}